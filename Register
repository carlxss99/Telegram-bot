// 📌 /register - Registro del usuario y manejo de referidos
var lang = User.getProperty("language") || "en";

// Mensajes en diferentes idiomas
var messages = {
  es: {
    alreadyRegistered: "⚠️ Ya estás registrado.",
    registrationSuccess: "✅ Registro exitoso.\nSi algo no funciona bien, usa /reRegister para intentarlo nuevamente.",
    registrationFailed: "❌ El registro no ha funcionado correctamente. Usa el comando /reRegister para intentar nuevamente.",
    nextAction: "🤔 ¿Qué te gustaría hacer a continuación?",
    referrerPoints: "🎉 ¡Tu referidor ha ganado {points} puntos!",
    referredSuccess: "🎉 ¡Te has registrado con éxito a través de un referidor!",
    retryRegistration: "🔄 Reintentar registro"
  },
  en: {
    alreadyRegistered: "⚠️ You are already registered.",
    registrationSuccess: "✅ Registration successful.\nIf something is not working properly, use /reRegister to try again.",
    registrationFailed: "❌ Registration did not work properly. Use the /reRegister command to try again.",
    nextAction: "🤔 What would you like to do next?",
    referrerPoints: "🎉 Your referrer has earned {points} points!",
    referredSuccess: "🎉 You have successfully registered through a referrer!",
    retryRegistration: "🔄 Try registering again"
  },
  ru: {
    alreadyRegistered: "⚠️ Вы уже зарегистрированы.",
    registrationSuccess: "✅ Регистрация прошла успешно.\nЕсли что-то работает неправильно, используйте /reRegister для повторной попытки.",
    registrationFailed: "❌ Регистрация не удалась. Используйте команду /reRegister для повторной попытки.",
    nextAction: "🤔 Что вы хотели бы сделать дальше?",
    referrerPoints: "🎉 Ваш реферер заработал {points} очков!",
    referredSuccess: "🎉 Вы успешно зарегистрировались через реферала!",
    retryRegistration: "🔄 Повторить регистрацию"
  },
  hi: {
    alreadyRegistered: "⚠️ आप पहले से ही पंजीकृत हैं।",
    registrationSuccess: "✅ पंजीकरण सफल रहा।\nयदि कुछ ठीक से काम नहीं कर रहा है, तो /reRegister का उपयोग करके पुन: प्रयास करें।",
    registrationFailed: "❌ पंजीकरण सफल नहीं हुआ। कृपया /reRegister कमांड का उपयोग करके पुनः प्रयास करें।",
    nextAction: "🤔 आगे आप क्या करना चाहेंगे?",
    referrerPoints: "🎉 आपके रेफरर ने {points} अंक कमाए हैं!",
    referredSuccess: "🎉 आप सफलतापूर्वक रेफरल के माध्यम से पंजीकृत हो गए हैं!",
    retryRegistration: "🔄 पुनः पंजीकरण करें"
  },
  zh: {
    alreadyRegistered: "⚠️ 你已经注册过了。",
    registrationSuccess: "✅ 注册成功。\n如果出现问题，请使用 /reRegister 再试一次。",
    registrationFailed: "❌ 注册失败。请使用 /reRegister 命令重试。",
    nextAction: "🤔 接下来你想做什么？",
    referrerPoints: "🎉 你的推荐人获得了 {points} 分！",
    referredSuccess: "🎉 你已成功通过推荐人注册！",
    retryRegistration: "🔄 重试注册"
  },
  ja: {
    alreadyRegistered: "⚠️ あなたはすでに登録されています。",
    registrationSuccess: "✅ 登録が成功しました。\n何か問題がある場合は、/reRegister を使って再試行してください。",
    registrationFailed: "❌ 登録に失敗しました。/reRegister コマンドで再試行してください。",
    nextAction: "🤔 次に何をしますか？",
    referrerPoints: "🎉 あなたの紹介者は {points} ポイントを獲得しました！",
    referredSuccess: "🎉 紹介経由で正常に登録されました！",
    retryRegistration: "🔄 再登録する"
  },
  ar: {
    alreadyRegistered: "⚠️ أنت مسجل بالفعل.",
    registrationSuccess: "✅ تم التسجيل بنجاح.\nإذا واجهت أي مشكلة، استخدم /reRegister للمحاولة مرة أخرى.",
    registrationFailed: "❌ فشل التسجيل. استخدم الأمر /reRegister للمحاولة مرة أخرى.",
    nextAction: "🤔 ماذا ترغب في القيام به بعد ذلك؟",
    referrerPoints: "🎉 لقد حصل المحيل الخاص بك على {points} نقاط!",
    referredSuccess: "🎉 تم التسجيل بنجاح عبر المحيل!",
    retryRegistration: "🔄 إعادة التسجيل"
  }
};

// 📌 Obtener datos del usuario
var userData = Bot.getProperty("user_" + user.telegramid);

// Función para manejar registro
function registerUser() {
  var username = user.username ? "@" + user.username : "Usuario_" + user.telegramid;
  var newUser = { username: username, points: 0, referrals: 0, links: [] };

  // Guardar usuario
  Bot.setProperty("user_" + user.telegramid, newUser, "json");

  // Manejo de referidos usando ReferralLib
  Libs.ReferralLib.currentUser.track({
    onAttractedByUser: function (refUser) {
      // Sumar puntos al referidor y contar el referido (sin usar bandera para evitar duplicados)
      var referrerData = Bot.getProperty("user_" + refUser.chatId);
      if (referrerData) {
        referrerData.points += 50;
        referrerData.referrals += 1;
        Bot.setProperty("user_" + refUser.chatId, referrerData, "json");
        Bot.sendMessage(messages[lang].referrerPoints.replace("{points}", 50));
      }
      Bot.sendMessage(messages[lang].referredSuccess);
    }
  });

  // Enviar mensaje de registro exitoso con opción para reintentar
  var retryKeyboard = [
    [{ title: messages[lang].retryRegistration, command: "/reRegister" }]
  ];
  Bot.sendInlineKeyboard(retryKeyboard, messages[lang].registrationSuccess);
}

// Si el usuario ya está registrado, enviamos un mensaje adecuado
if (userData) {
  Bot.sendMessage(messages[lang].alreadyRegistered);
} else {
  registerUser();
}

// 🛠 Teclado inline con opciones
var langButtons = {
  es: "➕ Agregar Enlace",
  ru: "➕ Добавить ссылку",
  hi: "➕ लिंक जोड़ें",
  zh: "➕ 添加链接",
  ja: "➕ リンクを追加",
  ar: "➕ إضافة رابط",
  en: "➕ Add Link"
};
var rankingButtons = {
  es: "🏆 Ver Ranking",
  ru: "🏆 Посмотреть Рейтинг",
  hi: "🏆 रैंकिंग देखें",
  zh: "🏆 查看排名",
  ja: "🏆 ランキングを見る",
  ar: "🏆 عرض التصنيف",
  en: "🏆 View Ranking"
};
var pointsButtons = {
  es: "💎 Mis Puntos",
  ru: "💎 Мои Очки",
  hi: "💎 मेरे अंक",
  zh: "💎 我的积分",
  ja: "💎 私のポイント",
  ar: "💎 نقاطي",
  en: "💎 My Points"
};
var backToMenuButton = {
  es: "🔙 Volver al Menú",
  ru: "🔙 Вернуться в меню",
  hi: "🔙 मेनू पर वापस जाएं",
  zh: "🔙 返回菜单",
  ja: "🔙 メニューに戻る",
  ar: "🔙 العودة إلى القائمة",
  en: "🔙 Back to Menu"
};

var keyboard = [
  [{ title: langButtons[lang], command: "/addlink" }],
  [{ title: rankingButtons[lang], command: "/rankings" }],
  [{ title: pointsButtons[lang], command: "/checkpoints" }],
  [{ title: backToMenuButton[lang], command: "/start" }]
];

Bot.sendInlineKeyboard(keyboard, messages[lang].nextAction);
